// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TransactionStatus {
  PAID
  PENDING
  FAILED
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  address   String?
  age       Int
  point     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // [relation_name] [relation_table_name][relation_type]
  Transaction Transaction[]
}

model Product {
  id        String   @id @default(uuid())
  name      String
  price     Float
  stock     Int
  isExpired Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Transaction Transaction[]
  Image       Image?
}

model Transaction {
  id        String            @id @default(uuid())
  userId    String
  productId String
  status    TransactionStatus @default(PENDING)
  createdAt DateTime          @default(now())

  // [relation_name] [table_name] 
  User    User    @relation(fields: [userId], references: [id])
  Product Product @relation(fields: [productId], references: [id])
}

model Image {
  id        String   @id @default(uuid())
  imageUrl  String
  productId String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Product Product @relation(fields: [productId], references: [id])
}
